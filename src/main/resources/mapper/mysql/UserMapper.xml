<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.mysql.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.springboot.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="BIGINT" property="status"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
    </resultMap>
    <sql id="Base_Column_List">
       id, username, nickname, email, password, create_time, last_login_time, status, ip, image
   </sql>
    <select id="getUser" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username} and password= #{password}
    </select>

    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>

    <select id="getUserByNickname" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where nickname = #{nickname}
    </select>

    <select id="getAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="name != null">
                username like '%${name}%'
                or
                nickname like '%${name}%'
            </if>
        </where>
    </select>

    <insert id="saveUser" parameterType="com.example.springboot.entity.User">
      insert into user (username, nickname, email,password, create_time, last_login_time,status, ip, image)
      values (#{username},#{nickname}, #{email},#{password}, #{createTime}, #{lastLoginTime},#{status}, #{ip}, #{image})
    </insert>

    <update id="updateUser" parameterType="com.example.springboot.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="ip != null">
                ip = #{ip},
            </if>
            <if test="image != null">
                image = #{image},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delUser" parameterType="java.lang.Long">
        delete from user where id = #{id}
    </delete>

    <update id="updataStatus" parameterType="java.lang.Long">
        update user
        <set>
            status =#{status}
        </set>
        where id = #{id}
    </update>

    <update id="updatePwd">
        update user
        <set>
            password = #{password}
        </set>
        where id = #{id}
    </update>

    <select id="searchUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="name != null">
                username like '%${name}%'
                or
                nickname like '%${name}%'
            </if>
        </where>
    </select>

</mapper>
